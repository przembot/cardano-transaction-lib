// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["469377351"] = [{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Types.purs","end":[100,38]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Optic","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]},"arguments":[["p",null],["s",null],["t",null],["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A general-purpose Data.Lens.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[254,1],"name":"src/Contract/Test/Utils.purs","end":[255,41]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContractWrapAssertion","moduleName":"Contract.Test.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Utils"],"ContractTestM"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Utils"],"ContractTestM"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},"arguments":[["r",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}],["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"An assertion that can control when the contract is run. The assertion\ninhabiting this type should not call the contract more than once, as other\nassertions need to be able to make this assumption to succesfully compose.\n"}],"tag":"SearchResult"}]